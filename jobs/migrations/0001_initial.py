# Generated by Django 3.0.6 on 2020-05-23 11:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'city',
                'verbose_name_plural': 'cites',
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('title', models.CharField(max_length=255, verbose_name='description')),
                ('description', models.TextField(verbose_name='description')),
                ('is_open', models.BooleanField(default=True, verbose_name='is open')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='jobs.City', verbose_name='city')),
                ('customer', models.ForeignKey(limit_choices_to={'is_customer': True}, on_delete=django.db.models.deletion.CASCADE, related_name='issues', to=settings.AUTH_USER_MODEL, verbose_name='customer')),
            ],
        ),
        migrations.CreateModel(
            name='SubCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'sub city',
                'verbose_name_plural': 'sub cites',
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('description', models.TextField(verbose_name='description')),
                ('worker_has_read_it', models.BooleanField(default=False, verbose_name='worker_has_read_it')),
                ('worker_has_accepted', models.BooleanField(default=None, null=True, verbose_name='worker has accepted')),
                ('from_customer', models.ForeignKey(limit_choices_to={'is_customer': True}, on_delete=django.db.models.deletion.CASCADE, related_name='customer_offer', to=settings.AUTH_USER_MODEL, verbose_name='from customer')),
                ('to_worker', models.ForeignKey(limit_choices_to={'is_worker': True}, on_delete=django.db.models.deletion.CASCADE, related_name='worker_offer', to=settings.AUTH_USER_MODEL, verbose_name='to worker')),
            ],
        ),
        migrations.CreateModel(
            name='IssueProgress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('is_done_by_customer', models.BooleanField(default=False, verbose_name='is done by customer')),
                ('is_done_by_worker', models.BooleanField(default=False, verbose_name='is done by worker')),
                ('customer', models.ForeignKey(limit_choices_to={'is_customer': True}, on_delete=django.db.models.deletion.CASCADE, related_name='customer_issue_progress', to=settings.AUTH_USER_MODEL, verbose_name='customer')),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issue_progress', to='jobs.Issue', verbose_name='issue')),
                ('worker', models.ForeignKey(limit_choices_to={'is_worker': True}, on_delete=django.db.models.deletion.CASCADE, related_name='worker_issue_progress', to=settings.AUTH_USER_MODEL, verbose_name='worker')),
            ],
        ),
        migrations.AddField(
            model_name='issue',
            name='sub_city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='jobs.SubCity', verbose_name='sub city'),
        ),
        migrations.CreateModel(
            name='HistoricalSubCity',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='name')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sub city',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOffer',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('description', models.TextField(verbose_name='description')),
                ('worker_has_read_it', models.BooleanField(default=False, verbose_name='worker_has_read_it')),
                ('worker_has_accepted', models.BooleanField(default=None, null=True, verbose_name='worker has accepted')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('from_customer', models.ForeignKey(blank=True, db_constraint=False, limit_choices_to={'is_customer': True}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='from customer')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('to_worker', models.ForeignKey(blank=True, db_constraint=False, limit_choices_to={'is_worker': True}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='to worker')),
            ],
            options={
                'verbose_name': 'historical offer',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIssueProgress',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('is_done_by_customer', models.BooleanField(default=False, verbose_name='is done by customer')),
                ('is_done_by_worker', models.BooleanField(default=False, verbose_name='is done by worker')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, limit_choices_to={'is_customer': True}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='customer')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('issue', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jobs.Issue', verbose_name='issue')),
                ('worker', models.ForeignKey(blank=True, db_constraint=False, limit_choices_to={'is_worker': True}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='worker')),
            ],
            options={
                'verbose_name': 'historical issue progress',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIssue',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('title', models.CharField(max_length=255, verbose_name='description')),
                ('description', models.TextField(verbose_name='description')),
                ('is_open', models.BooleanField(default=True, verbose_name='is open')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('city', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jobs.City', verbose_name='city')),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, limit_choices_to={'is_customer': True}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='customer')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('sub_city', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='jobs.SubCity', verbose_name='sub city')),
            ],
            options={
                'verbose_name': 'historical issue',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCity',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='unique id')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='name')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical city',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
